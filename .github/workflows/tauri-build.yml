name: Tauri Build (tag-triggered)

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Tauri CLI (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            PKG=@tauri-apps/cli-darwin-x64
          else
            PKG=@tauri-apps/cli-darwin-arm64
          fi
          echo "Installing $PKG"
          npm install --no-save "$PKG"

      - name: Install Tauri CLI (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: npm install --no-save @tauri-apps/cli-linux-x64-gnu

      - name: Install Tauri CLI (Windows)
        if: matrix.os == 'windows-latest'
        run: npm install --no-save @tauri-apps/cli-win32-x64-msvc

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Tauri target
        uses: actions/cache@v4
        with:
          path: src-tauri/target
          key: ${{ runner.os }}-tauri-target-${{ hashFiles('src-tauri/Cargo.lock') }}

      - name: Setup Linux deps
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Build (platform-specific)
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            npm run tauri:build:exe
          else
            npm run tauri:build
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-${{ runner.os }}-artifacts
          path: |
            src-tauri/target/**/release/*
            BiliBili-History-Frontend.exe
          if-no-files-found: warn


